{"version":3,"sources":["components/ButtonRegister.jsx","components/Beginning.jsx","components/api.jsx","components/ButtonBack.jsx","components/Register.jsx","components/Users.jsx","App.js","index.js"],"names":["ButtonRegister","to","color","block","Beginning","initialValues","email","password","validate","valor","mistakesLogin","test","onSubmit","values","resetForm","loginData","config","method","url","headers","data","JSON","stringify","axios","then","response","token","accessToken","console","log","localStorage","setItem","window","location","href","catch","error","alert","postDataLogin","errors","className","htmlFor","type","name","id","component","outline","size","ButtonBack","Register","useState","send","setSend","nombres","apellido_paterno","apellido_materno","rut","password_confirmation","mistakes","registerData","formData","FormData","append","res","err","postData","Users","user","setsUser","useEffect","getUsers","getItem","striped","map","item","scope","AppRouter","path","element","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0004cc5d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const ButtonRegister = () => {\r\n    return (\r\n        <div> \r\n\r\n            <Link to='/register'><Button color=\"secondary\" block>\r\n                Registrate\r\n            </Button></Link>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { postDataLogin } from './api';\r\nimport { ButtonRegister } from './ButtonRegister';\r\nimport { Button } from 'reactstrap';\r\n\r\n\r\nexport const Beginning = () => {\r\n\r\n    return (\r\n\r\n        <>\r\n            <Formik\r\n                initialValues={{\r\n                    email: '',\r\n                    password: ''\r\n\r\n                }}\r\n                //validacion del email\r\n                validate={(valor) => {\r\n                    let mistakesLogin = {};\r\n\r\n                    if (!valor.email) {\r\n                        mistakesLogin.email = 'favor ingresar email valido'\r\n                    } else if (!/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(valor.email)) {\r\n                        mistakesLogin.email = 'favor ingresar email valido'\r\n                    }\r\n\r\n                    return mistakesLogin;\r\n                }}\r\n\r\n                onSubmit={(values, { resetForm }) => {\r\n                    postDataLogin(values);\r\n                    resetForm();\r\n\r\n                }}\r\n\r\n            >\r\n                {({ errors }) => (\r\n                    <Form className='formularioLogin'>\r\n                        <div>\r\n                            <h1>Login</h1>\r\n                            <label htmlFor=\"email\" className='labelLogin'>E-mail</label><br/>\r\n                            <Field\r\n                                className='inputLogin'\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                id=\"email\"\r\n                            />\r\n                            <ErrorMessage name='email' component={() => (<p className='errors'>{errors.email}</p>)} />\r\n\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"password\" className='labelLogin'>Contrase√±a</label><br/>\r\n                            <Field\r\n                                className='inputLogin'\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                id=\"password\"\r\n                            />\r\n                        </div>\r\n                        <br/>\r\n                        <Button type=\"submit\" color=\"light\" outline size=\"lg\" className='buttonLogin'>Enviar</Button><br/>\r\n                        <br/>\r\n                        <ButtonRegister /><br/>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\n","import axios from \"axios\";\r\n\r\n//peticion post del registro\r\nexport const postData = (registerData) => {\r\n    const formData = new FormData();\r\n\r\n    formData.append('nombres', registerData.nombres)\r\n    formData.append('apellido_paterno', registerData.apellido_paterno)\r\n    formData.append('apellido_materno', registerData.apellido_materno)\r\n    formData.append('rut', registerData.rut)\r\n    formData.append('email', registerData.email)\r\n    formData.append('name', registerData.name)\r\n    formData.append('password', registerData.password)\r\n    formData.append('password_confirmation', registerData.password_confirmation)\r\n    axios({\r\n        method: 'POST',\r\n        url: \"http://prueba.brik.cl/api/register\",\r\n        data: formData\r\n    })\r\n        .then(res => {\r\n            console.log(res.data);\r\n            alert('registrado');\r\n\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n\r\n};\r\n//peticion post del login\r\nexport const postDataLogin = (loginData) => {\r\n    const data = JSON.stringify({\r\n        \"email\": loginData.email,\r\n        \"password\": loginData.password\r\n    });\r\n\r\n    const config = {\r\n        method: 'post',\r\n        url: 'http://prueba.brik.cl/api/login',\r\n        headers: {\r\n            'Authorization': 'Basic Og==',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        data: data\r\n    };\r\n\r\n    axios(config)\r\n        .then(function (response) {\r\n            let token= 'Bearer '+ response.data.data.accessToken\r\n            console.log(JSON.stringify(response.data));\r\n            localStorage.setItem('token', token);\r\n            window.location.href = '/users'\r\n        })\r\n        .catch(function (error) {\r\n            alert('Vuelve a intentarlo!')\r\n            console.log(error);\r\n        })\r\n};\r\n","import React from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const ButtonBack = () => {\r\n    return (\r\n        <div> \r\n\r\n            <Link to='/'><Button color=\"secondary\" size='lg' className='buttonBack'>Volver</Button></Link>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { postData } from './api';\r\nimport { ButtonBack } from './ButtonBack';\r\nimport { Button } from 'reactstrap';\r\n\r\nexport const Register = () => {\r\n    const [send, setSend] = useState(false)\r\n    \r\n    return (\r\n        \r\n        <>\r\n         <Formik\r\n            initialValues={{\r\n                nombres: '',\r\n                apellido_paterno: '',\r\n                apellido_materno: '',\r\n                rut: '',\r\n                email: '',\r\n                name: '',\r\n                password: '',\r\n                password_confirmation:''\r\n            }}\r\n            //validacion del nombre\r\n            validate ={(valor) => {\r\n                let mistakes = {};\r\n\r\n                if(!valor.nombres){\r\n                    mistakes.nombres= 'favor ingresar nombre'\r\n                } else if( !/^[a-zA-Z√Ä-√ø\\s]{1,40}$/.test(valor.nombres)) {\r\n                    mistakes.nombres= 'Solo debe contener letras y espacios'\r\n                } \r\n\r\n                //validacion correo                \r\n                if(!valor.email){\r\n                    mistakes.email= 'favor ingresar email valido'\r\n                } else if( !/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(valor.email)) {\r\n                    mistakes.email= 'favor ingresar email valido'\r\n                }             \r\n                //validacion de rut               \r\n                if(!valor.rut){\r\n                    mistakes.rut= 'favor ingresar rut valido'\r\n                } else if( !/^(\\d{2}\\.\\d{3}\\.\\d{3}-)([a-zA-Z]{1}$|\\d{1}$)/.test(valor.rut)) {\r\n                    mistakes.rut= 'favor ingresar rut valido'\r\n                } \r\n                  \r\n                     \r\n                return mistakes;\r\n            }}                    \r\n\r\n             onSubmit = {(values, {resetForm}) => {\r\n                postData(values);\r\n                resetForm();\r\n                setSend(true);\r\n            }}\r\n            \r\n            >      \r\n                {( {errors}) => (                \r\n                <Form className='formulario'>                   \r\n                    <div>\r\n                        <h1>Registro</h1>\r\n                        <label htmlFor=\"nombres\" className='labelLogin'>Nombres</label><br/>\r\n                        <Field\r\n                        className='inputLogin' \r\n                        type=\"text\" \r\n                        name=\"nombres\" \r\n                        id=\"nombres\"                        \r\n                        />\r\n                        <ErrorMessage name='nombres' component={() => (<p className='errors'>{errors.nombres}</p>)}/>\r\n                        \r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"apellido_paterno\" className='labelLogin'>Apellido Paterno</label><br/>\r\n                        <Field \r\n                        className='inputLogin'\r\n                        type=\"text\" \r\n                        name=\"apellido_paterno\" \r\n                        id=\"apellido_paterno\"                         \r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"apellido_materno\" className='labelLogin'>Apellido Materno</label><br/>                        \r\n                        <Field \r\n                        className='inputLogin'\r\n                        type=\"text\" \r\n                        name=\"apellido_materno\" \r\n                        id=\"apellido_materno\"                        \r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"rut\"className='labelLogin'>Rut</label><br/>\r\n                        <Field \r\n                        className='inputLogin'\r\n                        type='text' \r\n                        name=\"rut\" \r\n                        id=\"rut\"                        \r\n                        />\r\n                        <ErrorMessage name='rut' component={() => (<p className='errors'>{errors.rut}</p>)}/>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"email\" className='labelLogin'>E-mail</label><br/>\r\n                        <Field \r\n                        className='inputLogin'\r\n                        type=\"email\" \r\n                        name=\"email\" \r\n                        id=\"email\"  \r\n                        />\r\n                        <ErrorMessage name='email' component={() => (<p className='errors'>{errors.email}</p>)}/>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"name\" className='labelLogin'>Nombre de Usuario</label><br/>\r\n                        <Field \r\n                        className='inputLogin'\r\n                        type=\"text\" \r\n                        name=\"name\" \r\n                        id=\"name\" \r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"password\" className='labelLogin'>Contrase√±a</label><br/>\r\n                        <Field \r\n                        className='inputLogin'\r\n                        type=\"password\" \r\n                        name=\"password\" \r\n                        id=\"password\" \r\n                        />                        \r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"password_confirmation\" className='labelLogin'>Confirma tu Contrase√±a</label><br/>\r\n                        <Field \r\n                        className='inputLogin'\r\n                        type=\"password\" \r\n                        name=\"password_confirmation\" \r\n                        id=\"password_confirmation\" \r\n                        />                        \r\n                    </div>\r\n                    <br/>\r\n                    <Button type=\"submit\" color=\"light\" outline size=\"lg\" className='buttonLogin'>Enviar</Button><br/>\r\n                    <br/>\r\n                    <ButtonBack />\r\n                    { send && <p className='send'>Formulario enviado con exito</p>}\r\n                </Form>\r\n                )}\r\n            </Formik>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { ButtonBack } from './ButtonBack';\r\nimport { Table } from 'reactstrap';\r\n\r\nexport const Users = () => {\r\n\r\n    const [user, setsUser] = useState([])\r\n\r\n    useEffect(() => {\r\n        getUsers();\r\n    }, [])\r\n\r\n    const getUsers = () => {\r\n        const data = '';\r\n        const config = {\r\n            method: 'get',\r\n            url: 'http://prueba.brik.cl/api/users',\r\n            headers: {\r\n                'Authorization': localStorage.getItem('token')\r\n            },\r\n            data: data\r\n        };\r\n\r\n        axios(config)\r\n            .then(function (response) {\r\n                setsUser(response.data.data);\r\n                console.log( response.data.data, localStorage.getItem('token'));\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n    };\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Table striped>\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            #\r\n                        </th>\r\n                        <th>\r\n                            Usuario\r\n                        </th>\r\n                        <th>\r\n                           Email\r\n                        </th>                        \r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        user.map(item => (\r\n                            <tr  key={item.id}>\r\n                                <th scope=\"row\">\r\n                                {item.id}\r\n                                </th>\r\n                                <td>\r\n                                {item.name}\r\n                                </td>\r\n                                <td>\r\n                                {item.email}\r\n                                </td>                                \r\n                            </tr>\r\n                            \r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n                 \r\n            <ButtonBack />\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { Beginning }  from './components/Beginning';\nimport { Register } from './components/Register';\nimport { Users } from \"./components/Users\";\n\nexport const AppRouter = () => {\n  \n  \n    return (\n        <BrowserRouter>\n        <div>   \n        \n          <Routes>\n          <Route path=\"/\" element={<Beginning />}/>\n          <Route path=\"/register\" exact element={<Register />}/>\n          <Route path=\"/users\" exact element={<Users />}/>\n          </Routes>\n        </div>\n      </BrowserRouter> \n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { AppRouter } from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <AppRouter />\n  </React.StrictMode>,\n   document.getElementById('root')\n);\n\n"],"sourceRoot":""}